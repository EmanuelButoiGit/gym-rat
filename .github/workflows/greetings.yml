name: Greetings

on:
  pull_request_target:
    types: [opened]
  issues:
    types: [opened]

jobs:
  greeting:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Greet on first issue
        if: github.event_name == 'issues'
        uses: actions/first-interaction@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          issue-message: |
            ðŸ‘‹ Hello @{{ github.actor }}, thank you for raising your first issue in our repository! We appreciate your initiative to contribute.
            
            If you have any questions or need assistance, don't hesitate to ask. Our community and maintainers are here to help. Welcome aboard! ðŸš€

      - name: Greet on first PR
        if: github.event_name == 'pull_request_target'
        uses: actions/first-interaction@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pr-message: |
            ðŸŽ‰ Congratulations @{{ github.actor }} on your first pull request in our project! Your contribution is valuable to us.
            
            Our team will review your PR soon. In the meantime, if you have any questions or need assistance, please feel free to reach out. Our community and maintainers are always here to help. Happy coding! ðŸ’»

      - name: Label first issue as new-contributor
        if: github.event_name == 'issues'
        uses: actions/labeler@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          issue-message: "new-contributor"

      - name: Follow-up on inactivity
        if: github.event_name == 'issues' || github.event_name == 'pull_request_target'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Check for inactivity and post a follow-up message
            const issueOrPrNumber = context.issue.number;
            const comments = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueOrPrNumber,
            });
            // Customize based on your project's needs
            if (comments.data.length === 0) {
              const message = "ðŸ‘‹ It's been a while since we heard from you. If you have any questions or need further assistance, please don't hesitate to ask!";
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueOrPrNumber,
                body: message,
              });
            }
